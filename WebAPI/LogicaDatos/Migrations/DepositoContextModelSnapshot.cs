// <auto-generated />
using System;
using LogicaDatos.Repositorios;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicaDatos.Migrations
{
    [DbContext(typeof(DepositoContext))]
    partial class DepositoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogiaNegocio.Dominio.Articulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ParametroId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParametroId")
                        .IsUnique();

                    b.ToTable("Articulos");
                });

            modelBuilder.Entity("LogiaNegocio.Dominio.MovimientoStock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticuloId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoMovimientoId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloId");

                    b.HasIndex("TipoMovimientoId");

                    b.ToTable("MovimientosStock");
                });

            modelBuilder.Entity("LogiaNegocio.Dominio.TipoMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EsIncremento")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TiposMovimiento");
                });

            modelBuilder.Entity("LogiaNegocio.Dominio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContraseniaEncriptada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("TipoUsuario").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("LogiaNegocio.Dominio.Administrador", b =>
                {
                    b.HasBaseType("LogiaNegocio.Dominio.Usuario");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("LogiaNegocio.Dominio.EncargadoDeposito", b =>
                {
                    b.HasBaseType("LogiaNegocio.Dominio.Usuario");

                    b.HasDiscriminator().HasValue("EncargadoDeposito");
                });

            modelBuilder.Entity("LogiaNegocio.Dominio.Articulo", b =>
                {
                    b.HasOne("LogicaNegocio.Dominio.Parametro", "Parametro")
                        .WithOne()
                        .HasForeignKey("LogiaNegocio.Dominio.Articulo", "ParametroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogiaNegocio.ValueObjects.ArticuloVOs.CodigoArticulo", "CodigoArticulo", b1 =>
                        {
                            b1.Property<int>("ArticuloId")
                                .HasColumnType("int");

                            b1.Property<long>("Valor")
                                .HasColumnType("bigint");

                            b1.HasKey("ArticuloId");

                            b1.ToTable("Articulos");

                            b1.WithOwner()
                                .HasForeignKey("ArticuloId");
                        });

                    b.OwnsOne("LogiaNegocio.ValueObjects.ArticuloVOs.DescripcionArticulo", "Descripcion", b1 =>
                        {
                            b1.Property<int>("ArticuloId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ArticuloId");

                            b1.ToTable("Articulos");

                            b1.WithOwner()
                                .HasForeignKey("ArticuloId");
                        });

                    b.OwnsOne("LogiaNegocio.ValueObjects.ArticuloVOs.NombreArticulo", "Nombre", b1 =>
                        {
                            b1.Property<int>("ArticuloId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ArticuloId");

                            b1.ToTable("Articulos");

                            b1.WithOwner()
                                .HasForeignKey("ArticuloId");
                        });

                    b.OwnsOne("LogiaNegocio.ValueObjects.ArticuloVOs.Precio", "Precio", b1 =>
                        {
                            b1.Property<int>("ArticuloId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("ArticuloId");

                            b1.ToTable("Articulos");

                            b1.WithOwner()
                                .HasForeignKey("ArticuloId");
                        });

                    b.OwnsOne("LogiaNegocio.ValueObjects.ArticuloVOs.Stock", "Stock", b1 =>
                        {
                            b1.Property<int>("ArticuloId")
                                .HasColumnType("int");

                            b1.Property<int>("Valor")
                                .HasColumnType("int");

                            b1.HasKey("ArticuloId");

                            b1.ToTable("Articulos");

                            b1.WithOwner()
                                .HasForeignKey("ArticuloId");
                        });

                    b.Navigation("CodigoArticulo")
                        .IsRequired();

                    b.Navigation("Descripcion")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();

                    b.Navigation("Parametro");

                    b.Navigation("Precio")
                        .IsRequired();

                    b.Navigation("Stock")
                        .IsRequired();
                });

            modelBuilder.Entity("LogiaNegocio.Dominio.MovimientoStock", b =>
                {
                    b.HasOne("LogiaNegocio.Dominio.Articulo", "Articulo")
                        .WithMany()
                        .HasForeignKey("ArticuloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LogiaNegocio.Dominio.TipoMovimiento", "TipoMovimiento")
                        .WithMany("MovimientosStock")
                        .HasForeignKey("TipoMovimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LogiaNegocio.ValueObjects.MovimientosStock.Cantidad", "Cantidad", b1 =>
                        {
                            b1.Property<int>("MovimientoStockId")
                                .HasColumnType("int");

                            b1.Property<int>("Valor")
                                .HasColumnType("int");

                            b1.HasKey("MovimientoStockId");

                            b1.ToTable("MovimientosStock");

                            b1.WithOwner()
                                .HasForeignKey("MovimientoStockId");
                        });

                    b.Navigation("Articulo");

                    b.Navigation("Cantidad")
                        .IsRequired();

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("LogiaNegocio.Dominio.TipoMovimiento", b =>
                {
                    b.OwnsOne("LogiaNegocio.ValueObjects.TipoMovimiento.NombreTipoMovimiento", "NombreTipoMovimiento", b1 =>
                        {
                            b1.Property<int>("TipoMovimientoId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("TipoMovimientoId");

                            b1.ToTable("TiposMovimiento");

                            b1.WithOwner()
                                .HasForeignKey("TipoMovimientoId");
                        });

                    b.Navigation("NombreTipoMovimiento")
                        .IsRequired();
                });

            modelBuilder.Entity("LogiaNegocio.Dominio.Usuario", b =>
                {
                    b.OwnsOne("LogiaNegocio.ValueObjects.UsuarioVOs.NombreUsuario", "Apellido", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogiaNegocio.ValueObjects.UsuarioVOs.NombreUsuario", "Nombre", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogiaNegocio.ValueObjects.UsuarioVOs.Contrasenia", "Contrasenia", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("LogiaNegocio.ValueObjects.UsuarioVOs.EmailUsuario", "Email", b1 =>
                        {
                            b1.Property<int>("UsuarioId")
                                .HasColumnType("int");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Apellido")
                        .IsRequired();

                    b.Navigation("Contrasenia")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("LogicaNegocio.Dominio.Parametro", b =>
                {
                    b.OwnsOne("LogicaNegocio.ValueObjects.ParametroArticulo.ParametroValor", "Valor", b1 =>
                        {
                            b1.Property<int>("ParametroId")
                                .HasColumnType("int");

                            b1.Property<int>("Valor")
                                .HasColumnType("int");

                            b1.HasKey("ParametroId");

                            b1.ToTable("Parametros");

                            b1.WithOwner()
                                .HasForeignKey("ParametroId");
                        });

                    b.Navigation("Valor")
                        .IsRequired();
                });

            modelBuilder.Entity("LogiaNegocio.Dominio.TipoMovimiento", b =>
                {
                    b.Navigation("MovimientosStock");
                });
#pragma warning restore 612, 618
        }
    }
}
